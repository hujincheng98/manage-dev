<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skynet.rimp.channelInfo.dao.ApiResAuthDao">
     
    <!-- 单表操作频繁 并无频繁增删改，可加二级缓存 --> 
    <!-- <cache type="com.tiuweb.climb.framework.config.ehcache.RedisCache"/> --> 
     
    <resultMap id="BaseResultMap" type="com.skynet.rimp.channelInfo.vo.ApiResAuth">
       <id column="ID" property="id" jdbcType="VARCHAR" />           
       <result column="TOKEN" property="token" jdbcType="VARCHAR" />             
       <result column="MODEL" property="model" jdbcType="VARCHAR" />             
       <result column="API_NAME" property="apiName" jdbcType="VARCHAR" />             
       <result column="API_URL" property="apiUrl" jdbcType="VARCHAR" />             
       <result column="HOS_ID" property="hosId" jdbcType="VARCHAR" />             
       <result column="AUTH" property="auth" jdbcType="INTEGER" />             
       <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />             
       <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />             
       <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />             
       <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />             
    </resultMap>
      
    <sql id="Base_Column_List" >
        ID,
        TOKEN,
        MODEL,
        API_NAME,
        API_URL,
        HOS_ID,
        AUTH,
        CREATE_DATE,
        CREATE_USER,
        UPDATE_DATE,
        UPDATE_USER
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        select                               
        <include refid="Base_Column_List" /> 
        from api_res_auth
        WHERE 1=1
        AND AUTH = 1
    </select> 

    <select id="findByPrimaryKey" resultMap="BaseResultMap">
        select                               
        <include refid="Base_Column_List" /> 
        from api_res_auth	
        where 1 = 1
        AND ID = #{id}  		  
    </select> 
    <select id="findByConditionForAdm" parameterType="com.skynet.rimp.channelInfo.vo.ApiResAuth" resultMap="BaseResultMap">
        select                               
        <include refid="Base_Column_List" /> 
        from api_res_auth
        where 1=1
        <if test="id!=null">
            AND ID = #{id}
        </if>
        <if test="token!=null">
            AND TOKEN = #{token}
        </if>
        <if test="model!=null">
            AND MODEL = #{model}
        </if>
        <if test="apiName!=null">
            AND API_NAME = #{apiName}
        </if>
        <if test="apiUrl!=null">
            AND API_URL = #{apiUrl}
        </if>
        <if test="auth!=null">
            AND AUTH = #{auth}
        </if>
        <if test="createDate!=null">
            AND CREATE_DATE = #{createDate}
        </if>
        <if test="createUser!=null">
            AND CREATE_USER = #{createUser}
        </if>
        <if test="updateDate!=null">
            AND UPDATE_DATE = #{updateDate}
        </if>
        <if test="updateUser!=null">
            AND UPDATE_USER = #{updateUser}
        </if>
         AND HOS_ID IS NULL OR HOS_ID = ''
    </select>
    <select id="findByConditionForUser" parameterType="com.skynet.rimp.channelInfo.vo.ApiResAuth" resultMap="BaseResultMap">
        select                               
        <include refid="Base_Column_List" /> 
        from api_res_auth
        where 1=1
        <if test="id!=null">
            AND ID = #{id}
        </if>
        <if test="token!=null">
            AND TOKEN = #{token}
        </if>
        <if test="model!=null">
            AND MODEL = #{model}
        </if>
        <if test="apiName!=null">
            AND API_NAME = #{apiName}
        </if>
        <if test="apiUrl!=null">
            AND API_URL = #{apiUrl}
        </if>
        <if test="hosId!=null">
            AND HOS_ID = #{hosId}
        </if>
        <if test="auth!=null">
            AND AUTH = #{auth}
        </if>
        <if test="createDate!=null">
            AND CREATE_DATE = #{createDate}
        </if>
        <if test="createUser!=null">
            AND CREATE_USER = #{createUser}
        </if>
        <if test="updateDate!=null">
            AND UPDATE_DATE = #{updateDate}
        </if>
        <if test="updateUser!=null">
            AND UPDATE_USER = #{updateUser}
        </if>
    </select>

    <select id="findByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select                               
        <include refid="Base_Column_List" /> 
        from api_res_auth
        where 1=1
        <if test="searchParams.id!=null">
            AND ID = #{searchParams.id}
        </if>
        <if test="searchParams.token!=null">
            AND TOKEN = #{searchParams.token}
        </if>
        <if test="searchParams.model!=null">
            AND MODEL = #{searchParams.model}
        </if>
        <if test="searchParams.apiName!=null">
            AND API_NAME = #{searchParams.apiName}
        </if>
        <if test="searchParams.apiUrl!=null">
            AND API_URL = #{searchParams.apiUrl}
        </if>
        <if test="searchParams.hosId!=null">
            AND HOS_ID = #{searchParams.hosId}
        </if>
        <if test="searchParams.auth!=null">
            AND AUTH = #{searchParams.auth}
        </if>
        <if test="searchParams.createDate!=null">
            AND CREATE_DATE = #{searchParams.createDate}
        </if>
        <if test="searchParams.createUser!=null">
            AND CREATE_USER = #{searchParams.createUser}
        </if>
        <if test="searchParams.updateDate!=null">
            AND UPDATE_DATE = #{searchParams.updateDate}
        </if>
        <if test="searchParams.updateUser!=null">
            AND UPDATE_USER = #{searchParams.updateUser}
        </if>
    </select>

    <insert id="insert" parameterType="com.skynet.rimp.channelInfo.vo.ApiResAuth">
       insert into api_res_auth 
       <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id!=null and id!=''">
                ID, 
            </if>
            <if test="token!=null and token!=''">
                TOKEN, 
            </if>
            <if test="model!=null and model!=''">
                MODEL, 
            </if>
            <if test="apiName!=null and apiName!=''">
                API_NAME, 
            </if>
            <if test="apiUrl!=null and apiUrl!=''">
                API_URL, 
            </if>
            <if test="hosId!=null and hosId!=''">
                HOS_ID, 
            </if>
            <if test="auth!=null and auth!=''">
                AUTH, 
            </if>
            <if test="createDate!=null and createDate!=''">
                CREATE_DATE, 
            </if>
            <if test="createUser!=null and createUser!=''">
                CREATE_USER, 
            </if>
            <if test="updateDate!=null and updateDate!=''">
                UPDATE_DATE, 
            </if>
            <if test="updateUser!=null and updateUser!=''">
                UPDATE_USER, 
            </if>
        </trim>  
        <trim prefix="values (" suffix=")" suffixOverrides="," > 
            <if test="id!=null">      
                #{id,jdbcType=VARCHAR}, 
            </if>
            <if test="token!=null">      
                #{token,jdbcType=VARCHAR}, 
            </if>
            <if test="model!=null">      
                #{model,jdbcType=VARCHAR}, 
            </if>
            <if test="apiName!=null">      
                #{apiName,jdbcType=VARCHAR}, 
            </if>
            <if test="apiUrl!=null">      
                #{apiUrl,jdbcType=VARCHAR}, 
            </if>
            <if test="hosId!=null">      
                #{hosId,jdbcType=VARCHAR}, 
            </if>
            <if test="auth!=null">      
                #{auth,jdbcType=INTEGER}, 
            </if>
            <if test="createDate!=null">      
                #{createDate,jdbcType=TIMESTAMP}, 
            </if>
            <if test="createUser!=null">      
                #{createUser,jdbcType=VARCHAR}, 
            </if>
            <if test="updateDate!=null">      
                #{updateDate,jdbcType=TIMESTAMP}, 
            </if>
            <if test="updateUser!=null">      
                #{updateUser,jdbcType=VARCHAR}, 
            </if>
        </trim> 
    </insert>

    <delete id="delete" parameterType="com.skynet.rimp.channelInfo.vo.ApiResAuth" >
        delete from api_res_auth  
        where  1=1 
        <if test="id!=null">    
           and ID = #{id,jdbcType=VARCHAR}        
        </if>
        <if test="token!=null">    
           and TOKEN = #{token,jdbcType=VARCHAR}        
        </if>
        <if test="model!=null">    
           and MODEL = #{model,jdbcType=VARCHAR}        
        </if>
        <if test="apiName!=null">    
           and API_NAME = #{apiName,jdbcType=VARCHAR}        
        </if>
        <if test="apiUrl!=null">    
           and API_URL = #{apiUrl,jdbcType=VARCHAR}        
        </if>
        <if test="hosId!=null">    
           and HOS_ID = #{hosId,jdbcType=VARCHAR}        
        </if>
        <if test="auth!=null">    
           and AUTH = #{auth,jdbcType=INTEGER}        
        </if>
        <if test="createDate!=null">    
           and CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}        
        </if>
        <if test="createUser!=null">    
           and CREATE_USER = #{createUser,jdbcType=VARCHAR}        
        </if>
        <if test="updateDate!=null">    
           and UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}        
        </if>
        <if test="updateUser!=null">    
           and UPDATE_USER = #{updateUser,jdbcType=VARCHAR}        
        </if>
    </delete>

    <update id="update" parameterType="com.skynet.rimp.channelInfo.vo.ApiResAuth" >
        update api_res_auth   
        <set>
            <if test="token!=null and token!=''"> 
              TOKEN = #{token,jdbcType=VARCHAR},
            </if>
            <if test="model!=null and model!=''"> 
              MODEL = #{model,jdbcType=VARCHAR},
            </if>
            <if test="apiName!=null and apiName!=''"> 
              API_NAME = #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiUrl!=null and apiUrl!=''"> 
              API_URL = #{apiUrl,jdbcType=VARCHAR},
            </if>
            <if test="hosId!=null and hosId!=''"> 
              HOS_ID = #{hosId,jdbcType=VARCHAR},
            </if>
              AUTH = #{auth,jdbcType=INTEGER},
            <if test="createDate!=null and createDate!=''"> 
              CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser!=null and createUser!=''"> 
              CREATE_USER = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateDate!=null and updateDate!=''"> 
              UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser!=null and updateUser!=''"> 
              UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            </if>
        </set>
        <where> 
            <if test="id!=null and id!=''"> 
               and ID = #{id,jdbcType=VARCHAR}        
            </if>
        </where> 
    </update>

    <insert id="insertBatch" parameterType="java.util.List" >
        insert into api_res_auth
        (
            ID,
        TOKEN,
        MODEL,
        API_NAME,
        API_URL,
        HOS_ID,
        AUTH,
        CREATE_DATE,
        CREATE_USER,
        UPDATE_DATE,
        UPDATE_USER 
        )
        values
        <foreach collection="list" item="item" index="index" separator="," > 
        (
            #{item.id,jdbcType=VARCHAR},   
            #{item.token,jdbcType=VARCHAR},   
            #{item.model,jdbcType=VARCHAR},   
            #{item.apiName,jdbcType=VARCHAR},   
            #{item.apiUrl,jdbcType=VARCHAR},   
            #{item.hosId,jdbcType=VARCHAR},   
            #{item.auth,jdbcType=INTEGER},   
            #{item.createDate,jdbcType=TIMESTAMP},   
            #{item.createUser,jdbcType=VARCHAR},   
            #{item.updateDate,jdbcType=TIMESTAMP},   
            #{item.updateUser,jdbcType=VARCHAR}  
        )
        </foreach>
    </insert>
    
   <select id="findByApiUrlInParamsForAdm" resultMap="BaseResultMap">
       SELECT * FROM api_res_auth 
         WHERE 1=1
         AND API_URL NOT IN
         <foreach  item="item" collection="list" index="index"  open="(" separator="," close=")">#{item}</foreach>
         AND HOS_ID IS NULL OR HOS_ID = ''
   </select>
   
   <select id="findByApiUrlInParamsForUser" resultMap="BaseResultMap">
       SELECT * FROM api_res_auth 
         WHERE 1=1
         AND API_URL NOT IN
         <foreach  item="item" collection="list" index="index"  open="(" separator="," close=")">#{item}</foreach>
   </select>
    
</mapper>
