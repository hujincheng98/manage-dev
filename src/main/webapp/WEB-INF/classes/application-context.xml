<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 使用annotation 自动注册bean, 只注册service层 -->
	<context:component-scan base-package="com.skynet" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>  
  
    <!-- jedis pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
  
    <!-- spring data redis -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"></property>
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.pass}" />
        <property name="timeout" value="${redis.timeout}" />
        <property name="database" value="${redis.default.db}"></property>
        <constructor-arg index="0" ref="jedisPoolConfig" />
    </bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">  
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="valueSerializer">  
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="hashKeySerializer">  
	    	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="hashValueSerializer">  
	    	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	   </property>
        <property name="enableTransactionSupport" value="true"/>   <!--当查询时没值不报null异常-->
    </bean> 
      
 	<!-- redis服务封装 -->
	<bean id="redisService" class="com.skynet.rimp.common.utils.RedisService"/>
	
	
	<!-- 面向切面的配置 ： 事务、日志 -->
	<aop:config>
		<!-- 面向切面的事务配置 -->
		<aop:pointcut id="txAdvice" expression="execution(public * com.skynet..service.*.*(..))" />
        <aop:pointcut id="optlogService" expression="execution(* com.skynet..service.*.*(..))" />
        <aop:pointcut id="loginlogService" expression="execution(* com.skynet.platform.core.action.LoginAction.login(*,*,*))" />
		<aop:advisor pointcut-ref="txAdvice" advice-ref="userTxAdvice" />
		<!-- 操作日志配置 -->
        <aop:aspect id="optaspect" ref="OperationlogAspect">
            <!-- <aop:before pointcut-ref="logService" method="doBefore"/> --><!-- 前置通知 -->
            <aop:after pointcut-ref="optlogService" method="doAfter"/><!-- 后置通知 -->
            <aop:after-throwing pointcut-ref="optlogService" method="doAfterThrowing" throwing="e"/><!-- 异常通知 -->
            <!--环绕通知 <aop:around pointcut-ref="logService" method="doAround"/> --><!-- 环绕通知 -->
        </aop:aspect>
		<!-- 登录日志配置 -->
        <aop:aspect id="loginaspect" ref="LoginlogAspect">
            <aop:after pointcut-ref="loginlogService" method="doAfter"/><!-- 后置通知 -->
            <aop:after-throwing pointcut-ref="loginlogService" method="doAfterThrowing" throwing="e"/><!-- 异常通知 -->
        </aop:aspect>
    </aop:config>
    <bean id="OperationlogAspect" class="com.skynet.platform.common.log.OperationLogAspect" />
    <bean id="LoginlogAspect" class="com.skynet.platform.common.log.LoginLogAspect" />


	<!-- 数据源配置文件加载 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="propertyUtils" class="com.skynet.util.PropertyUtil">
		<property name="properties">
			<!-- 国际化配置 -->
			<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="locations">
					<list>
						<value>classpath*:i18n.properties</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="#{propertyUtils.getList('i18n.file.')}" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="cacheSeconds" value="5" />
	</bean>
	
	<!-- 全局异常配置 start 
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.skynet.exception.SysInfoCacheNullException">/error/error</prop>
				<prop key="com.skynet.exception.UserDisableException">/error/err</prop>
			</props>
		</property>
	</bean>
	-->
	
	<!-- spring配置jndi
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/platform</value>
        </property>
    </bean>-->
	 
	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${cpool.maxActive}" />
		<property name="minIdle" value="${cpool.minIdle}" />
		<property name="maxIdle" value="${cpool.maxIdle}" />
		<property name="initialSize" value="${cpool.initialSize}" />
		<property name="logAbandoned" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="${cpool.removeAbandonedTimeout}" />
		<property name="maxWait" value="${cpool.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${cpool.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${cpool.numTestsPerEvictionRun}" />
		<property name="minEvictableIdleTimeMillis" value="${cpool.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${cpool.validationQuery}" />
	</bean>

	<!-- 配置事务 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
		<property name="plugins">
			<array>
				<bean class="com.skynet.platform.common.mybatis.DataInterceptor"></bean>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.skynet.**.dao" />
	</bean>


	<!-- ================================事务相关控制================================================= -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	
	<!-- ============================================系统缓存配置========================================= -->
	<bean id="configCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>

	<bean id="sysConfigCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="configCacheManager" />
		<property name="cacheName" value="skynet.sysConfigCache"></property>
	</bean>
	
	
	
</beans>