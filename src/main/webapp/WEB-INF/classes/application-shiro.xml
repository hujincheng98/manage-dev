<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 
		Subject 当前操作的程序的对象相当于用户User，对应操作视图 SecurityManager Shiro框架的心脏，确保框架正常运行。 
		Authenticator 执行身份验证（登录）尝试负责组件。
		AuthenticationStrategy 协调Realm用户数据访问策略 Authorizer 负责应用程序中决定用户访问控制的组件。 
		SessionManager 如何创建及管理用户的session生命周期，提供良好的session体验。 
		SessionDAO 支持Session CRUD数据操作。 
		CacheManager 创建并管理Shiro组件执行的Cache实例的生命周期。 
		Cryptography Shiro企业安全组件的补充。 
		Realms 担当Shiro与应用程序安全数据的"桥梁"或"连接器"。 
		
		anon       org.apache.shiro.web.filter.authc.AnonymousFilter
		authc       org.apache.shiro.web.filter.authc.FormAuthenticationFilter
		authcBasic	org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
		perms     org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
		port     org.apache.shiro.web.filter.authz.PortFilter
		rest    org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
		roles    org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
		ssl	    org.apache.shiro.web.filter.authz.SslFilter
		user	org.apache.shiro.web.filter.authc.UserFilter
	-->

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>

	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="configCacheManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.skynet.platform.common.authentication.CoreAuthorizingRealm"></bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="unauthorizedUrl" value="/system/error" />
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authc" />
				<entry key="user" value-ref="user" />
				<entry key="logout" value-ref="logout" />
			</map>
		</property>
		
		<property name="filterChainDefinitions">
			<value>
				/weixin/api/** = anon
				/common/** = anon
				/api/** = anon
				/js/** = anon
				/**/login.do = authc
				/**/logout.do = logout
				/*/** = user
				/ = anon
			</value>
		</property>
	</bean>

	<bean id="authc" class="com.skynet.platform.common.authentication.CoreFormAuthenticationFilter" />
	<bean id="user" class="com.skynet.platform.common.authentication.CoreUserFilter" />
	<bean id="logout" class="com.skynet.platform.common.authentication.CoreLogoutFilter" />
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>


	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/system/error</prop>
			</props>
		</property>
	</bean>
 -->
</beans>